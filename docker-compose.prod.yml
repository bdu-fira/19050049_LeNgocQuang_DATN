services:
  # Flask Patient Monitoring Application (Production)
  patient-monitor-app:
    build: .
    container_name: patient-monitor-app-prod
    ports:
      - "127.0.0.1:5000:5000"  # Only bind to localhost
    environment:
      - FLASK_ENV=production
      - FLASK_APP=app.py
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://patient_user:patient_password@postgres:5432/patient_monitor
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
    volumes:
      - app_logs:/app/logs
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - patient-monitor-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Redis for SocketIO session storage
  redis:
    image: redis:7-alpine
    container_name: patient-monitor-redis-prod
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - patient-monitor-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: patient-monitor-postgres-prod
    environment:
      - POSTGRES_DB=patient_monitor
      - POSTGRES_USER=patient_user
      - POSTGRES_PASSWORD=patient_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - patient-monitor-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: patient-monitor-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - patient-monitor-app
    restart: unless-stopped
    networks:
      - patient-monitor-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  patient-monitor-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 